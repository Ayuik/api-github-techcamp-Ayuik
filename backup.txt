const APIURL = "https://api.github.com/users/";

export function giveMeData(username) {
                    axios.get(`${APIURL}${username}`)
                        .then(response => {
                            console.log("State: fulfilled");
                            const datos =  response.data;
                            console.log("Data Recieved:", datos);
                            provideInformation(datos);
                            axios.get(`${APIURL}${username}/repos`);
                        })
                        .then(reposResponse => { 
                            const repos = reposResponse.data; 
                            const recentRepos = getRecentRepos(repos); 
                            displayRecentRepos(recentRepos);
                        })
                        .catch(error => {
                            console.log("State: rejected");
                            if (error.response) {
                                console.log(`Connection failed`)
                                giveErrorMessage();
                        }
                    });
                }

let mainSection = document.getElementById('main');

function giveErrorMessage() {
    let notFound = document.createElement('div')
        notFound.className = 'card'
        notFound.innerHTML =
            `<div>
            <p>No profile with this user name</p>
            </div>
            `
    mainSection.appendChild(notFound)
}

function getRecentRepos(repos) { 
    return repos 
    .sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at)) 
    .slice(0, 5) 
    .map(repo => repo.name);
} 

function provideInformation(datos, repo) {
    let userCard = document.createElement('div')
    let avatar = datos.avatar_url
    let fullName = datos.name
    let biography = datos.bio !== null ? datos.bio : "";
    let followersNumber = datos.followers
    let followingNumber = datos.following
    let repoNumber = datos.public_repos
    let recentRepo = repo[i].name

        userCard.className = 'card'
        userCard.innerHTML =
            `<div>
                <img class="avatar" alt="avatar" src="${avatar}">
                <section class="user-info">
                    <h2>${fullName}</h2>
                    <p>${biography}</p>
                    <ul>
                        <strong>
                            <li>${followersNumber} Followers</li>
                            <li>${followingNumber} Following</li>
                            <li>${repoNumber} Repos</li>
                        </strong>
                    </ul>
                    <span class="repo">${recentRepo}[0]</span> <span class="repo">${recentRepo}[1]</span> <span class="repo">${recentRepo}[2]</span> <span class="repo">${recentRepo}[3]</span> <span class="repo">${recentRepo}[4]</span>
                </section>
            </div>
            `
    mainSection.appendChild(userCard);
};